Index: client/src/store/actions/dialogActions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import socket from '../../core/socket';\r\nimport Dialogs from '../../Services/Dialogs';\r\n\r\nconst dialogActions = {\r\n  setDialogs: (payload) => ({\r\n    type: 'DIALOGS:SET_DIALOGS',\r\n    payload,\r\n  }),\r\n  setPartner: (payload) => ({\r\n    type: 'DIALOG:SET_CURRENT_PARTNER',\r\n    payload,\r\n  }),\r\n  setLoading: (payload) => ({\r\n    type: 'DIALOG:SET_LOADING',\r\n    payload,\r\n  }),\r\n\r\n  setCurrentDialogId: (id) => (dispatch) => {\r\n    dispatch({\r\n      type: 'DIALOG:SET_CURRENT_DIALOG_ID',\r\n      payload: id,\r\n    });\r\n    socket.emit('DIALOGS:SET_DIALOG_ID', id);\r\n  },\r\n\r\n  setCurrentPartner: (partner) => (dispatch) => {\r\n    dispatch(dialogActions.setPartner(partner));\r\n  },\r\n\r\n  fetchDialogs: () => async (dispatch) => {\r\n    dispatch(dialogActions.setLoading(true));\r\n    try {\r\n      const { data } = await Dialogs.fetchDialogs();\r\n\r\n      if (!data) {\r\n        console.log('error 123');\r\n      }\r\n\r\n      return dispatch(dialogActions.setDialogs(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(dialogActions.setLoading(false));\r\n    }\r\n  },\r\n};\r\n\r\nexport default dialogActions;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/store/actions/dialogActions.js b/client/src/store/actions/dialogActions.js
--- a/client/src/store/actions/dialogActions.js	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/store/actions/dialogActions.js	(date 1647501695476)
@@ -1,4 +1,4 @@
-import socket from '../../core/socket';
+import socket from '../../api/socket';
 import Dialogs from '../../Services/Dialogs';
 
 const dialogActions = {
Index: client/src/store/actions/authActions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import openNotification from '../../helpers/notifications/openNotification';\r\nimport Auth from '../../Services/Auth';\r\nimport socket from '../../core/socket';\r\n\r\nconst authActions = {\r\n  setAuth: (payload) => ({\r\n    type: 'AUTH:SET_AUTH',\r\n    payload,\r\n  }),\r\n\r\n  setUser: (payload) => ({\r\n    type: 'AUTH:SET_USER',\r\n    payload,\r\n  }),\r\n\r\n  setLoading: (payload) => ({\r\n    type: 'AUTH:SET_LOADING',\r\n    payload,\r\n  }),\r\n\r\n  getCurrentUser: () => async (dispatch) => {\r\n    dispatch(authActions.setLoading(true));\r\n    try {\r\n      const userData = await Auth.CheckUser();\r\n      if (userData.response && userData.response.data.status === 401) {\r\n        openNotification('error', 'Ошибка', userData.response.data.message, 3);\r\n        dispatch(authActions.setAuth(false));\r\n        delete window.localStorage.token;\r\n      }\r\n      socket.emit('login', userData.data.id);\r\n      return dispatch(authActions.setUser(userData.data));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(authActions.setLoading(false));\r\n    }\r\n  },\r\n\r\n  login: (payload) => async (dispatch) => {\r\n    dispatch(authActions.setLoading(true));\r\n    try {\r\n      const { data } = await Auth.Login(payload);\r\n      if (!data.user) {\r\n        return openNotification('error', 'Ошибка', 'Неверный email или пароль', 3);\r\n      }\r\n      if (data.user.isActivated) {\r\n        localStorage.setItem('token', data.tokens.accessToken);\r\n        dispatch(authActions.getCurrentUser());\r\n        dispatch(authActions.setAuth(true));\r\n      }\r\n      socket.emit('login', data.user.id);\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      dispatch(authActions.setLoading(false));\r\n    }\r\n  },\r\n\r\n  logout: () => (dispatch) => {\r\n    Auth.Logout();\r\n    dispatch(authActions.setAuth(false));\r\n    dispatch(authActions.setUser({}));\r\n    localStorage.removeItem('token');\r\n    socket.close();\r\n  },\r\n  registration: (payload) => async (dispatch) => {\r\n    return await Auth.Registration(payload);\r\n  },\r\n};\r\n\r\nexport default authActions;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/store/actions/authActions.js b/client/src/store/actions/authActions.js
--- a/client/src/store/actions/authActions.js	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/store/actions/authActions.js	(date 1647501695460)
@@ -1,6 +1,6 @@
 import openNotification from '../../helpers/notifications/openNotification';
 import Auth from '../../Services/Auth';
-import socket from '../../core/socket';
+import socket from '../../api/socket';
 
 const authActions = {
   setAuth: (payload) => ({
Index: client/src/Pages/Auth/index.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import '../../styles/vars';\r\n\r\n.auth-page {\r\n  height: 100vh;\r\n  background-color: #fff;\r\n  &__content {\r\n    height: 100%;\r\n    display: flex;\r\n    .auth-form__block {\r\n      flex: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      &-wrapper {\r\n        max-width: 400px;\r\n        width: 100%;\r\n        .form-title {\r\n          text-align: center;\r\n          margin-bottom: 64px;\r\n          h2 {\r\n            font-size: 24px;\r\n            margin: 0;\r\n            font-family: 'Gilroy-Medium';\r\n          }\r\n          span {\r\n            font-size: 14px;\r\n            color: #979797;\r\n          }\r\n        }\r\n        .form-content {\r\n          box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\r\n          border-radius: 4px;\r\n          padding: 48px;\r\n          .ant-form {\r\n            &-item {\r\n              position: relative;\r\n              margin-bottom: 30px;\r\n              .error-message {\r\n                position: absolute;\r\n                left: 4px;\r\n                bottom: -25px;\r\n              }\r\n            }\r\n          }\r\n          .auth-btn {\r\n            background-color: $accentColor;\r\n            width: 100%;\r\n            margin-top: 24px;\r\n            margin-bottom: 0;\r\n            span {\r\n              font-size: 14px;\r\n              font-family: 'Gilroy-Medium';\r\n            }\r\n          }\r\n          .login-link {\r\n            font-size: 12px;\r\n            margin-top: 4px;\r\n            color: #979797;\r\n            display: block;\r\n            width: 100%;\r\n            text-align: center;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .info__block {\r\n      flex: 50%;\r\n      background-color: $accentColor;\r\n      padding: 64px;\r\n      &-img {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .info__block {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 426px) {\r\n  .App {\r\n    height: 100vh;\r\n  }\r\n  .auth-page {\r\n    .app-logo {\r\n      font-size: 18px;\r\n    }\r\n    .auth-page__content {\r\n      padding: 0 32px;\r\n      .auth-form__block-wrapper {\r\n        .form-title {\r\n          margin-top: 8px;\r\n          font-size: 18px;\r\n          margin-bottom: 16px;\r\n        }\r\n        .form-content {\r\n          padding: 32px;\r\n          .ant-form-item {\r\n            margin-bottom: 32px;\r\n          }\r\n          .auth-btn {\r\n            margin-top: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/Pages/Auth/index.scss b/client/src/Pages/Auth/index.scss
--- a/client/src/Pages/Auth/index.scss	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/Pages/Auth/index.scss	(date 1647502285601)
@@ -65,7 +65,7 @@
     }
     .info__block {
       flex: 50%;
-      background-color: $accentColor;
+      background: linear-gradient(333.69deg, #364DC7 0%, #4D72FA 100%);
       padding: 64px;
       &-img {
         width: 100%;
Index: client/src/layouts/UserProfile.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserAvatar from '../components/Avatar';\r\n\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nimport { EditOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { Button, DatePicker, Image, Input, Upload, Empty } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport Form from 'antd/lib/form/Form';\r\nimport { useEffect } from 'react';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { Formik } from 'formik';\r\nimport socket from '../core/socket';\r\n\r\nimport authActions from '../store/actions/authActions';\r\nimport Messages from '../Services/Messages';\r\nimport Files from '../Services/Files';\r\nimport Users from '../Services/Users';\r\n\r\nimport formatDate from '../helpers/formateDate';\r\n\r\nimport moment from 'moment';\r\n\r\nconst UserProfile = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [url, setUrl] = useState(user && user.avatar);\r\n  const [fileList, setFileList] = useState(url);\r\n  const [userFiles, setUserFiles] = useState();\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const [date, setDate] = useState(null);\r\n\r\n  const openModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const handleChangeAvatar = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      getBase64(info.file.originFileObj, (imageUrl) => setUrl(imageUrl));\r\n    }\r\n    setFileList([info.file.originFileObj]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('getCurrentUser', () => {\r\n      dispatch(authActions.getCurrentUser());\r\n    });\r\n    return () => {\r\n      socket.removeListener('getCurrentUser');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const get = async (id) => {\r\n      const result = [];\r\n      await Messages.getMessagesOfUser(id).then((files) => {\r\n        if (files.data) {\r\n          files.data.forEach((item) => {\r\n            result.push(...Object.values(item.attachments));\r\n          });\r\n        }\r\n      });\r\n      setUserFiles(result);\r\n    };\r\n    if (user) {\r\n      get(user.id);\r\n    }\r\n  }, [user]);\r\n\r\n  const audioRef = useRef(null);\r\n\r\n  const togglePlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current !== null) {\r\n      audioRef.current.addEventListener(\r\n        'playing',\r\n        () => {\r\n          console.log('playing');\r\n          setIsPlaying(true);\r\n        },\r\n        false,\r\n      );\r\n      audioRef.current.addEventListener(\r\n        'pause',\r\n        () => {\r\n          console.log('pause');\r\n          setIsPlaying(false);\r\n        },\r\n        false,\r\n      );\r\n      audioRef.current.addEventListener('ended', (e) => {\r\n        console.log('end');\r\n        setIsPlaying(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onChange = (date, dateString) => {\r\n    console.log(date);\r\n    setDate(date);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile__page\">\r\n      <Modal\r\n        footer={false}\r\n        onCancel={() => setVisible(false)}\r\n        visible={visible}\r\n        destroyOnClose={true}>\r\n        <div className=\"modal__info\">\r\n          <Formik\r\n            initialValues={{\r\n              name: user && user.name,\r\n              nickName: user ? user.nickName : '',\r\n              email: user && user.email,\r\n              date: user && user.birthday,\r\n              info: user && user.info,\r\n            }}\r\n            onSubmit={async (values) => {\r\n              if (fileList) {\r\n                const file = fileList[0];\r\n                let res = null;\r\n                if (typeof file === 'object') {\r\n                  res = await Files.upload(fileList[0]);\r\n                } else {\r\n                  res = user.userAvatar;\r\n                }\r\n\r\n                await Users.updateUser({\r\n                  ...values,\r\n                  date: date ? date : user.birthday,\r\n                  avatar: res.data.file.thumb,\r\n                  user: user.id,\r\n                });\r\n              }\r\n            }}>\r\n            {({ values, handleChange, handleSubmit, isSubmitting }) => (\r\n              <>\r\n                <Upload\r\n                  className=\"upload\"\r\n                  accept=\".jpg, .png, .gif\"\r\n                  withCredentials={true}\r\n                  method=\"GET\"\r\n                  maxCount={1}\r\n                  onChange={handleChangeAvatar}\r\n                  showUploadList={false}>\r\n                  <UserAvatar size={96} name={user.name} src={url} />\r\n                </Upload>\r\n\r\n                <Form onFinish={handleSubmit} className=\"profile__info\">\r\n                  <div className=\"form__item\">\r\n                    <span className=\"form__item-label\">Имя</span>\r\n                    <div className=\"form__item-input\">\r\n                      <Input value={values.name} name=\"name\" onChange={handleChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__item\">\r\n                    <span className=\"form__item-label\">Имя пользователя</span>\r\n                    <div className=\"form__item-input\">\r\n                      <Input value={values.nickName} onChange={handleChange} name=\"nickName\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__item\">\r\n                    <span className=\"form__item-label\">E-mail</span>\r\n                    <div className=\"form__item-input\">\r\n                      <Input value={values.email} onChange={handleChange} name=\"email\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__item\">\r\n                    <span className=\"form__item-label\">Дата рождения:</span>{' '}\r\n                    <div className=\"form__item-input\">\r\n                      <DatePicker\r\n                        picker=\"date\"\r\n                        onChange={onChange}\r\n                        format=\"DD.MM.YYYY\"\r\n                        name=\"date\"\r\n                        value={date && date}\r\n                        defaultValue={moment(user.birthday)}\r\n                        locale={locale}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form__item info\">\r\n                    <span className=\"form__item-label\">Дополнительная информация:</span>\r\n                    <div className=\"form__item-input\">\r\n                      <TextArea\r\n                        onChange={handleChange}\r\n                        name=\"info\"\r\n                        autoSize={{ minRows: 2, maxRows: 5 }}\r\n                        value={values.info}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    disabled={isSubmitting}\r\n                    htmlType=\"submit\"\r\n                    className=\"form__button\"\r\n                    shape=\"round\">\r\n                    Сохранить\r\n                  </Button>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"profile__page-user\">\r\n        <div className=\"profile__page-user__avatar\">\r\n          <UserAvatar\r\n            className=\"upload__avatar\"\r\n            src={user && user.avatar}\r\n            name={user && user.name}\r\n            size={128}\r\n          />\r\n        </div>\r\n        <div className=\"profile__page-edit__btn\">\r\n          <Button onClick={openModal} type=\"text\" icon={<EditOutlined />} />\r\n        </div>\r\n        <div className=\"profile__page-user__info\">\r\n          <div className=\" user__info-item\">\r\n            <span>Имя:</span>\r\n            {user && user.name}\r\n          </div>\r\n          <div className=\" user__info-item\">\r\n            <span>Имя пользователя</span>\r\n            {user ? user.nickName : '-'}\r\n          </div>\r\n          <div className=\" user__info-item\">\r\n            <span>E-mail</span>\r\n            {user && user.email}\r\n          </div>\r\n          <div className=\" user__info-item\">\r\n            <span>Дата рождения:</span>\r\n            {user && user.birthday ? formatDate(user.birthday) : '-'}\r\n          </div>\r\n          <div className=\" user__info-item\">\r\n            <span>Дополнительная информация:</span>\r\n            {user ? user.info : '-'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile__page-attachments\">\r\n        {userFiles ? (\r\n          <>\r\n            <div className=\"profile__page-attachments__title\">Матриалы Ваших сообщений</div>\r\n            <ul className=\"profile__page-attachments__list\">\r\n              {userFiles &&\r\n                userFiles.map((item) => (\r\n                  <li key={item._id} className=\"attachments__list-item\">\r\n                    {item && item.isAudio ? (\r\n                      <div key={item._id} className=\"attachments__audio\">\r\n                        <audio id=\"audio\" ref={audioRef} src={item.url} preload=\"metadata\" />\r\n\r\n                        <div className=\"attachments__audio-info\">\r\n                          <div className=\"attachments__audio-btn\">\r\n                            <Button type=\"link\" onClick={togglePlay}>\r\n                              {isPlaying ? (\r\n                                <svg\r\n                                  id=\"svg\"\r\n                                  width=\"30\"\r\n                                  height=\"30\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  xmlns=\"http://www.w3.org/2000/svg\">\r\n                                  <path\r\n                                    className=\"path\"\r\n                                    d=\"M10 9V15M14 9V15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\r\n                                    stroke=\"#3A456B\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                  />\r\n                                </svg>\r\n                              ) : (\r\n                                <svg\r\n                                  id=\"svg\"\r\n                                  width=\"30\"\r\n                                  height=\"30\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  xmlns=\"http://www.w3.org/2000/svg\">\r\n                                  <path\r\n                                    className=\"path\"\r\n                                    d=\"M14.7519 11.1679L11.5547 9.03647C10.8901 8.59343 10 9.06982 10 9.86852V14.1315C10 14.9302 10.8901 15.4066 11.5547 14.9635L14.7519 12.8321C15.3457 12.4362 15.3457 11.5638 14.7519 11.1679Z\"\r\n                                    stroke=\"#3A456B\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                  />\r\n                                  <path\r\n                                    className=\"path\"\r\n                                    d=\"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\r\n                                    stroke=\"#3A456B\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                  />\r\n                                </svg>\r\n                              )}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <Image\r\n                        loading=\"lazy\"\r\n                        className=\"message__image\"\r\n                        preview={{\r\n                          icons: [],\r\n                          destroyOnClose: true,\r\n                          src: `${item.url}`,\r\n                          mask: <EyeOutlined />,\r\n                        }}\r\n                        src={item.thumb}\r\n                      />\r\n                    )}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <Empty description=\"Здесь будут отображаться вложения Ваших сообщений\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/layouts/UserProfile.jsx b/client/src/layouts/UserProfile.jsx
--- a/client/src/layouts/UserProfile.jsx	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/layouts/UserProfile.jsx	(date 1647501695445)
@@ -11,7 +11,7 @@
 import { useEffect } from 'react';
 import TextArea from 'antd/lib/input/TextArea';
 import { Formik } from 'formik';
-import socket from '../core/socket';
+import socket from '../api/socket';
 
 import authActions from '../store/actions/authActions';
 import Messages from '../Services/Messages';
Index: client/src/containers/Messages.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ChatMessages from '../components/ChatMessages';\r\nimport socket from '../core/socket';\r\nimport messagesActions from '../store/actions/messagesActions';\r\n\r\nconst Messages = ({\r\n                    fetchMessages,\r\n                    currentDialogId,\r\n                    currentPartner,\r\n                    currentConv,\r\n                    items,\r\n                    user,\r\n                    dialogs,\r\n                    loader,\r\n                    addMessage,\r\n                  }) => {\r\n  const scrollRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    scrollRef.current && scrollRef.current.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n  };\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [items]);\r\n\r\n  const newMessage = (data) => {\r\n    addMessage(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentDialogId) {\r\n      fetchMessages(currentDialogId);\r\n      socket.on('SERVER:CREATE_MESSAGE', newMessage);\r\n    }\r\n    return () => {\r\n      socket.removeListener('SERVER:CREATE_MESSAGE');\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentDialogId, fetchMessages]);\r\n\r\n\r\n\r\n  return (\r\n      <ChatMessages\r\n          user={user}\r\n          messages={items}\r\n          scrollRef={scrollRef}\r\n          currentDialogId={currentDialogId}\r\n          loader={loader}\r\n          dialogs={dialogs}\r\n          currentPartner={currentPartner && currentPartner}\r\n          currentConv={currentConv}\r\n      />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n    ({ dialogs, messages, auth, conversations }) => ({\r\n      dialogs: dialogs.dialogs,\r\n      currentDialogId: dialogs.currentDialogId,\r\n      currentPartner: dialogs.currentPartner,\r\n      items: messages.items,\r\n      loader: messages.loader,\r\n      user: auth.user && auth.user.id,\r\n      currentConv: conversations.currentConversation\r\n\r\n    }),\r\n    { ...messagesActions },\r\n)(Messages);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/containers/Messages.js b/client/src/containers/Messages.js
--- a/client/src/containers/Messages.js	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/containers/Messages.js	(date 1647501695445)
@@ -1,7 +1,7 @@
 import { useEffect, useRef } from 'react';
 import { connect } from 'react-redux';
 import ChatMessages from '../components/ChatMessages';
-import socket from '../core/socket';
+import socket from '../api/socket';
 import messagesActions from '../store/actions/messagesActions';
 
 const Messages = ({
Index: client/src/containers/LeftBar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from 'react';\r\nimport Leftbar from '../components/LeftBar';\r\nimport Dialogs from '../Services/Dialogs';\r\nimport User from '../Services/Users';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nimport dialogActions from '../store/actions/dialogActions';\r\nimport socket from '../core/socket';\r\nimport { withRouter } from 'react-router';\r\nimport Conversations from '../Services/Conversations';\r\nimport conversationsActions from '../store/actions/conversatiosActions';\r\n\r\nconst LeftBarContainer = ({\r\n  fetchDialogs,\r\n  isLoading,\r\n  items,\r\n  userId,\r\n  history,\r\n  fetchConversations,\r\n}) => {\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [convVisible, setConvVisible] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [convTitle, setConvTitle] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [convUsers, setConvUsers] = useState([]);\r\n  const [messageValue, setMessageValue] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const [filtered, setFilteredDialogs] = useState(items && Array.from(items));\r\n\r\n  const { items: conversations } = useSelector((state) => state.conversations);\r\n\r\n  const onChangeConvTitle = (e) => {\r\n    setConvTitle(e.target.value);\r\n  };\r\n\r\n  const onChangeInput = (e) => {\r\n    const value = e.target.value;\r\n\r\n    setFilteredDialogs(\r\n      items &&\r\n        items.filter((item) => item.partner.name.toLowerCase().indexOf(value.toLowerCase()) >= 0),\r\n    );\r\n    setInputValue(value);\r\n  };\r\n\r\n  const showDialogModal = () => {\r\n    setDialogVisible(true);\r\n  };\r\n\r\n  const hideDialogModal = () => {\r\n    setUsers([]);\r\n    setInputValue('');\r\n    setSelectedUserId(null);\r\n    setDialogVisible(false);\r\n  };\r\n\r\n  const onShowConvModal = () => {\r\n    setConvVisible(true);\r\n  };\r\n\r\n  const onHideConvModal = () => {\r\n    setConvVisible(false);\r\n    setUsers([]);\r\n    setConvTitle('');\r\n  };\r\n\r\n  const onSearch = async (value) => {\r\n    await User.findUsers(value)\r\n      .then(({ data }) => {\r\n        setUsers(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleChangeSelect = (v) => {\r\n    const a = [];\r\n    for (let i = 0; i < v.length; i++) {\r\n      a.push(v[i].value);\r\n    }\r\n    setConvUsers(a);\r\n  };\r\n\r\n  const onCreateConv = () => {\r\n    if (!convUsers.length) {\r\n      return console.log('выберите собеседника');\r\n    }\r\n    Conversations.createConversation({ title: convTitle, members: convUsers });\r\n    onHideConvModal();\r\n  };\r\n\r\n  const onSelect = (value) => {\r\n    console.log(value);\r\n    setSelectedUserId(value.value);\r\n  };\r\n\r\n  const onChangeValue = (e) => {\r\n    setMessageValue(e.target.value);\r\n  };\r\n\r\n  const onSendMessage = () => {\r\n    setUploading(true);\r\n    Dialogs.createDialog({\r\n      partner: selectedUserId,\r\n      text: messageValue,\r\n    });\r\n    socket.on('DIALOG:CREATED', (data) => {\r\n      history.push(data._id);\r\n    });\r\n    setUploading(false);\r\n    hideDialogModal();\r\n\r\n    return () => {\r\n      socket.removeListener('DIALOG:CREATED');\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredDialogs(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    fetchDialogs();\r\n    socket.on('DIALOG:CREATED', fetchDialogs);\r\n    socket.on('SERVER:DIALOG_CHANGED', fetchDialogs);\r\n\r\n    return () => {\r\n      socket.removeListener('DIALOG:CREATED');\r\n      socket.removeListener('status');\r\n      socket.removeListener('SERVER:DIALOG_CHANGED');\r\n    };\r\n  }, [fetchDialogs]);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n    socket.on('CONVERSATION_SET_ITEM', fetchConversations);\r\n\r\n    return () => {\r\n      socket.removeListener('CONVERSATION_SET_ITEM');\r\n    };\r\n  }, [fetchConversations]);\r\n\r\n  // socket.on('status', (d) => console.log(d));\r\n\r\n  return (\r\n    <Leftbar\r\n      handleChangeSelect={handleChangeSelect}\r\n      conversations={conversations}\r\n      convUsers={convUsers}\r\n      userId={userId}\r\n      isLoading={isLoading}\r\n      uploading={uploading}\r\n      inputValue={inputValue}\r\n      dialogs={filtered}\r\n      messageValue={messageValue}\r\n      visible={dialogVisible}\r\n      convVisible={convVisible}\r\n      convTitle={convTitle}\r\n      users={users}\r\n      selectedUserId={selectedUserId}\r\n      onSendMessage={onSendMessage}\r\n      onChangeValue={onChangeValue}\r\n      onChangeInput={onChangeInput}\r\n      onCreateConv={onCreateConv}\r\n      onSearch={onSearch}\r\n      onSelect={onSelect}\r\n      setConvTitle={onChangeConvTitle}\r\n      showModal={showDialogModal}\r\n      hideModal={hideDialogModal}\r\n      showConvModal={onShowConvModal}\r\n      hideConvModal={onHideConvModal}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    ({ dialogs, auth }) => ({\r\n      items: dialogs.dialogs,\r\n      currentDialogId: dialogs.currentDialogId,\r\n      userId: auth.user && auth.user.id,\r\n      isLoading: dialogs.isLoading,\r\n    }),\r\n    { ...dialogActions, ...conversationsActions },\r\n  )(LeftBarContainer),\r\n);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/containers/LeftBar.js b/client/src/containers/LeftBar.js
--- a/client/src/containers/LeftBar.js	(revision 24b3a9cf2538f010881a45c2e98a5f9ecc6d71f5)
+++ b/client/src/containers/LeftBar.js	(date 1647501695476)
@@ -5,7 +5,7 @@
 import { connect, useSelector } from 'react-redux';
 
 import dialogActions from '../store/actions/dialogActions';
-import socket from '../core/socket';
+import socket from '../api/socket';
 import { withRouter } from 'react-router';
 import Conversations from '../Services/Conversations';
 import conversationsActions from '../store/actions/conversatiosActions';
diff --git a/client/src/core/socket.js b/client/src/api/socket.js
rename from client/src/core/socket.js
rename to client/src/api/socket.js
